[{"/Users/mk/stuff/fullstack-open-4/frontend/src/pages/BlogsPage.js":"1","/Users/mk/stuff/fullstack-open-4/frontend/src/index.tsx":"2","/Users/mk/stuff/fullstack-open-4/frontend/src/App.tsx":"3","/Users/mk/stuff/fullstack-open-4/frontend/src/state/store.ts":"4","/Users/mk/stuff/fullstack-open-4/frontend/src/services/login.ts":"5","/Users/mk/stuff/fullstack-open-4/frontend/src/components/Notification.tsx":"6","/Users/mk/stuff/fullstack-open-4/frontend/src/components/Login.tsx":"7","/Users/mk/stuff/fullstack-open-4/frontend/src/services/blogs.ts":"8","/Users/mk/stuff/fullstack-open-4/frontend/src/components/Togglable.tsx":"9","/Users/mk/stuff/fullstack-open-4/frontend/src/components/Blog.tsx":"10","/Users/mk/stuff/fullstack-open-4/frontend/src/components/BlogEditor.tsx":"11","/Users/mk/stuff/fullstack-open-4/frontend/src/utils/doFetch.ts":"12","/Users/mk/stuff/fullstack-open-4/frontend/src/utils/config.ts":"13","/Users/mk/stuff/fullstack-open-4/frontend/src/utils/errors.ts":"14","/Users/mk/stuff/fullstack-open-4/frontend/src/state/auth.store.ts":"15","/Users/mk/stuff/fullstack-open-4/frontend/src/state/notifications.store.ts":"16"},{"size":2268,"mtime":1642629509651,"results":"17","hashOfConfig":"18"},{"size":141,"mtime":1641971863149,"results":"19","hashOfConfig":"18"},{"size":883,"mtime":1642629375545,"results":"20","hashOfConfig":"18"},{"size":766,"mtime":1642617629391,"results":"21","hashOfConfig":"18"},{"size":550,"mtime":1642338378252,"results":"22","hashOfConfig":"18"},{"size":1033,"mtime":1642629299288,"results":"23","hashOfConfig":"18"},{"size":2643,"mtime":1642628768229,"results":"24","hashOfConfig":"18"},{"size":1407,"mtime":1642342642188,"results":"25","hashOfConfig":"18"},{"size":698,"mtime":1642013712011,"results":"26","hashOfConfig":"18"},{"size":1574,"mtime":1642013827388,"results":"27","hashOfConfig":"18"},{"size":2191,"mtime":1642628824039,"results":"28","hashOfConfig":"18"},{"size":796,"mtime":1642014800307,"results":"29","hashOfConfig":"18"},{"size":143,"mtime":1642012753420,"results":"30","hashOfConfig":"18"},{"size":353,"mtime":1642012818656,"results":"31","hashOfConfig":"18"},{"size":2946,"mtime":1642254588688,"results":"32","hashOfConfig":"18"},{"size":2067,"mtime":1642628494615,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"s5fefd",{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mk/stuff/fullstack-open-4/frontend/src/pages/BlogsPage.js",["72"],"/Users/mk/stuff/fullstack-open-4/frontend/src/index.tsx",[],["73"],"/Users/mk/stuff/fullstack-open-4/frontend/src/App.tsx",["74"],"/Users/mk/stuff/fullstack-open-4/frontend/src/state/store.ts",[],"/Users/mk/stuff/fullstack-open-4/frontend/src/services/login.ts",[],"/Users/mk/stuff/fullstack-open-4/frontend/src/components/Notification.tsx",["75","76"],"/Users/mk/stuff/fullstack-open-4/frontend/src/components/Login.tsx",[],"/Users/mk/stuff/fullstack-open-4/frontend/src/services/blogs.ts",[],"/Users/mk/stuff/fullstack-open-4/frontend/src/components/Togglable.tsx",["77"],"import PropTypes from \"prop-types\";\nimport React, { forwardRef, Ref, useImperativeHandle, useState } from \"react\";\n\nconst togglable = ({ action, children }: any, ref: Ref<unknown>) => {\n  const [visible, setVisible] = useState(false);\n  useImperativeHandle(ref, () => ({\n    close: () => setVisible(false),\n  }));\n\n  const toggle = () => setVisible((state) => !state);\n\n  const content = visible ? children : null;\n\n  return (\n    <div>\n      {content}\n      <button onClick={toggle}>{visible ? \"cancel\" : action}</button>\n    </div>\n  );\n};\n\nconst Togglable = forwardRef(togglable);\n\nTogglable.propTypes = {\n  children: PropTypes.element,\n  action: PropTypes.string,\n};\n\nexport default Togglable;\n","/Users/mk/stuff/fullstack-open-4/frontend/src/components/Blog.tsx",["78","79","80"],"/* eslint-disable react/prop-types */\nimport React, { useState } from \"react\";\n\nconst Blog = ({ blog, likeOne, deleteOne }: any) => {\n  const [showDetails, setShowDetails] = useState(false);\n\n  const deleteFn = () => {\n    const shouldDelete = window.confirm(`should delete ${blog.title}`);\n    if (shouldDelete) {\n      deleteOne(blog);\n    }\n  };\n\n  const detailsButtonLabel = showDetails ? \"Hide details\" : \"Show details\";\n  const toggleDetails = () => {\n    setShowDetails((showDetails) => !showDetails);\n  };\n\n  const toggleDetailsButton = (\n    <button\n      id=\"toggleBlogDetails\"\n      aria-live=\"polite\"\n      aria-controls=\"blogDetails\"\n      onClick={toggleDetails}\n    >\n      {detailsButtonLabel}\n    </button>\n  );\n\n  return (\n    <div role=\"region\" aria-label=\"blog info\">\n      <p aria-label=\"blog author\">{blog.author}</p>\n      <p aria-label=\"blog title\">{blog.title}</p>\n      {toggleDetailsButton}\n\n      <div\n        aria-labelledby=\"toggleBlogDetails\"\n        aria-expanded={showDetails}\n        id=\"blogDetails\"\n      >\n        {showDetails && (\n          <>\n            <p>\n              likes : <span aria-label=\"blog likes\">{blog.likes}</span>\n            </p>\n            <p>\n              url : <a href={blog.url}>Blog URL</a>\n            </p>\n            <button aria-label=\"delete blog\" onClick={deleteFn}>\n              Delete\n            </button>\n            <button aria-label=\"like blog\" onClick={() => likeOne(blog)}>\n              Like\n            </button>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Blog;\n","/Users/mk/stuff/fullstack-open-4/frontend/src/components/BlogEditor.tsx",["81","82","83","84","85","86"],"/Users/mk/stuff/fullstack-open-4/frontend/src/utils/doFetch.ts",["87"],"import { ApiError } from \"./errors\";\n\nconst doFetch = ({\n  url,\n  method,\n  token,\n  body,\n}: {\n  url: string;\n  method: \"POST\" | \"GET\" | \"PATCH\" | \"DELETE\";\n  token: string;\n  body?: unknown;\n}) =>\n  fetch(url, {\n    method,\n    body: body ? JSON.stringify(body) : null,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then((response) => {\n      if (response.ok) {\n        return response.text();\n      }\n\n      return response.text().then((text) => {\n        throw text;\n      });\n    })\n    .then((text) => {\n      return text ? JSON.parse(text) : {};\n    })\n    .catch((textError) => {\n      const data = textError.message ? JSON.parse(textError.message) : {};\n      throw new ApiError(data);\n    });\n\nexport default doFetch;\n",["88"],"/Users/mk/stuff/fullstack-open-4/frontend/src/utils/config.ts",[],"/Users/mk/stuff/fullstack-open-4/frontend/src/utils/errors.ts",["89","90","91"],"export class ApiError extends Error {\n  data: any;\n\n  constructor(data: any) {\n    console.log(data);\n    const { error, message, ...restOfData } = data;\n\n    if (error) {\n      super(error);\n    } else if (message) {\n      super(message);\n    } else {\n      super(\"Unknown error\");\n    }\n\n    this.name = \"api-error\";\n    this.data = restOfData;\n  }\n}\n","/Users/mk/stuff/fullstack-open-4/frontend/src/state/auth.store.ts",[],"/Users/mk/stuff/fullstack-open-4/frontend/src/state/notifications.store.ts",[],{"ruleId":"92","severity":1,"message":"93","line":14,"column":19,"nodeType":"94","messageId":"95","endLine":14,"endColumn":24},{"ruleId":"96","replacedBy":"97"},{"ruleId":"92","severity":1,"message":"93","line":34,"column":26,"nodeType":"94","messageId":"95","endLine":34,"endColumn":31},{"ruleId":"98","severity":1,"message":"99","line":15,"column":6,"nodeType":"100","messageId":"101","endLine":15,"endColumn":9,"suggestions":"102"},{"ruleId":"92","severity":1,"message":"93","line":17,"column":22,"nodeType":"94","messageId":"95","endLine":17,"endColumn":27},{"ruleId":"98","severity":1,"message":"99","line":4,"column":42,"nodeType":"100","messageId":"101","endLine":4,"endColumn":45,"suggestions":"103"},{"ruleId":"92","severity":1,"message":"93","line":4,"column":14,"nodeType":"94","messageId":"95","endLine":4,"endColumn":52},{"ruleId":"92","severity":1,"message":"104","line":4,"column":15,"nodeType":"105","messageId":"106","endLine":4,"endColumn":48},{"ruleId":"98","severity":1,"message":"99","line":4,"column":45,"nodeType":"100","messageId":"101","endLine":4,"endColumn":48,"suggestions":"107"},{"ruleId":"92","severity":1,"message":"93","line":14,"column":20,"nodeType":"94","messageId":"95","endLine":14,"endColumn":49},{"ruleId":"92","severity":1,"message":"104","line":14,"column":21,"nodeType":"105","messageId":"106","endLine":14,"endColumn":45},{"ruleId":"98","severity":1,"message":"99","line":14,"column":42,"nodeType":"100","messageId":"101","endLine":14,"endColumn":45,"suggestions":"108"},{"ruleId":"98","severity":1,"message":"99","line":19,"column":27,"nodeType":"100","messageId":"101","endLine":19,"endColumn":30,"suggestions":"109"},{"ruleId":"98","severity":1,"message":"99","line":19,"column":43,"nodeType":"100","messageId":"101","endLine":19,"endColumn":46,"suggestions":"110"},{"ruleId":"98","severity":1,"message":"99","line":26,"column":28,"nodeType":"100","messageId":"101","endLine":26,"endColumn":31,"suggestions":"111"},{"ruleId":"92","severity":1,"message":"93","line":3,"column":17,"nodeType":"94","messageId":"95","endLine":13,"endColumn":6},{"ruleId":"96","replacedBy":"112"},{"ruleId":"98","severity":1,"message":"99","line":2,"column":9,"nodeType":"100","messageId":"101","endLine":2,"endColumn":12,"suggestions":"113"},{"ruleId":"92","severity":1,"message":"114","line":4,"column":15,"nodeType":"115","messageId":"116","endLine":4,"endColumn":24},{"ruleId":"98","severity":1,"message":"99","line":4,"column":21,"nodeType":"100","messageId":"101","endLine":4,"endColumn":24,"suggestions":"117"},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","jest/no-try-expect",["118"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["119","120"],["121","122"],"Object pattern argument should be typed with a non-any type.","ObjectPattern","anyTypedArgUnnamed",["123","124"],["125","126"],["127","128"],["129","130"],["131","132"],["118"],["133","134"],"Argument 'data' should be typed with a non-any type.","Identifier","anyTypedArg",["135","136"],"no-conditional-expect",{"messageId":"137","fix":"138","desc":"139"},{"messageId":"140","fix":"141","desc":"142"},{"messageId":"137","fix":"143","desc":"139"},{"messageId":"140","fix":"144","desc":"142"},{"messageId":"137","fix":"145","desc":"139"},{"messageId":"140","fix":"146","desc":"142"},{"messageId":"137","fix":"147","desc":"139"},{"messageId":"140","fix":"148","desc":"142"},{"messageId":"137","fix":"149","desc":"139"},{"messageId":"140","fix":"150","desc":"142"},{"messageId":"137","fix":"151","desc":"139"},{"messageId":"140","fix":"152","desc":"142"},{"messageId":"137","fix":"153","desc":"139"},{"messageId":"140","fix":"154","desc":"142"},{"messageId":"137","fix":"155","desc":"139"},{"messageId":"140","fix":"156","desc":"142"},{"messageId":"137","fix":"157","desc":"139"},{"messageId":"140","fix":"158","desc":"142"},"suggestUnknown",{"range":"159","text":"160"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"159","text":"161"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"162","text":"160"},{"range":"162","text":"161"},{"range":"163","text":"160"},{"range":"163","text":"161"},{"range":"164","text":"160"},{"range":"164","text":"161"},{"range":"165","text":"160"},{"range":"165","text":"161"},{"range":"166","text":"160"},{"range":"166","text":"161"},{"range":"167","text":"160"},{"range":"167","text":"161"},{"range":"168","text":"160"},{"range":"168","text":"161"},{"range":"169","text":"160"},{"range":"169","text":"161"},[306,309],"unknown","never",[157,160],[124,127],[338,341],[538,541],[554,557],[723,726],[46,49],[72,75]]